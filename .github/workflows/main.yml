name: Workflow

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'
      
jobs:
  my_job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
  
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build an image from Dockerfile
      run: |
         docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,LOW'
   
      
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}


        
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.1.2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
        name: Build and push
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          push: true
          tags: blueeyesandwhitedragon/test:${{github.sha}}
    - name: Sign image with a key
      run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
          TAGS: blueeyesandwhitedragon/test:${{github.sha}}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGNKEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGNPASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
