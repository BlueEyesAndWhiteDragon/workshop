name: CICD

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'
      
jobs:
  Sucess:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '#NORUN')"
    steps:
   
  
    - name: Checkout code
      uses: actions/checkout@v2


    
    - name: Build an image from Dockerfile
      run: |
       docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
         
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      id: table
      with:
          image-ref: 'docker build -t docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          scan-type: 'fs'
          output: 'table.txt'
          exit-code: '1'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,LOW'
      
    
    - name: Slack Notification
      
      uses: rtCamp/action-slack-notify@v2
      env:
        
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: |
         Name: ${{ secrets.NAME }}
         Matriculation：A0287263W
         Email:<mailto:E1285209@u.nus.edu|E1285209@u.nus.edu>
         Git: ${{ secrets.GIT }}
         Image: ${{ secrets.DOCKER }}
        
        SLACK_TITLE: Image build and signed
        SLACK_USERNAME: CICD
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
   

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.1.2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
        name: Build and push
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          push: true
          tags: blueeyesandwhitedragon/test:${{github.sha}}
          
    - name: Sign image with a key
      run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
          TAGS: blueeyesandwhitedragon/test:${{github.sha}}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGNKEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGNPASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}


  fail:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '#NORUN')"
    needs: Sucess
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check
      run: |
        mkdir -p docs
        
    - name: Build an image from Dockerfile
      run: |
       docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
         
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      id: table
      with:
          image-ref: 'docker build -t docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          scan-type: 'fs'
          output: 'table.txt'
          exit-code: '1'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'






    - name: Move table
      if: ${{ failure() }}
      run: mv table.txt docs/


      
    
    - name: Slack Notification
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: |
         Name: ${{ secrets.NAME }}
         Matriculation：A0287263W
         Email:<mailto:E1285209@u.nus.edu|E1285209@u.nus.edu>
         Git: ${{ secrets.GIT }}
         Image: ${{ secrets.DOCKER }}
        
        SLACK_TITLE: Image build and signed
        SLACK_USERNAME: CICD
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
   
    - uses: MeilCli/slack-upload-file@v3
      if: ${{ failure() }} 
      with:
          slack_token: ${{ secrets.TOKEN }}
          channel_id: ${{ secrets.CHANNEL }}
          
          file_path: 'docs/table.txt'
          
          initial_comment: 'post by ZHANGSIBO'
         

    
         

        
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.1.2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
        name: Build and push
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          push: true
          tags: blueeyesandwhitedragon/test:${{github.sha}}
    - name: Sign image with a key
      run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
          TAGS: blueeyesandwhitedragon/test:${{github.sha}}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGNKEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGNPASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
